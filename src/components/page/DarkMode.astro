---
const {colors ="text-[--onSurface] hover:text-[--onSurfaceVariant]"} = Astro.props
---

<!-- change text colours if required -->
<button
  class:list={["flex-none darkmode-toggle transition p-3", colors]}
  aria-pressed="false"
  aria-label="Enable dark mode"
>

  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256">
    <path fill="currentColor" d="M232.13 143.64a6 6 0 0 0-6-1.49a90.07 90.07 0 0 1-112.27-112.3a6 6 0 0 0-7.49-7.48a102.88 102.88 0 0 0-51.89 36.31a102 102 0 0 0 142.84 142.84a102.88 102.88 0 0 0 36.31-51.89a6 6 0 0 0-1.5-5.99m-42 48.29a90 90 0 0 1-126-126a90.9 90.9 0 0 1 35.52-28.27a102.06 102.06 0 0 0 118.69 118.69a90.9 90.9 0 0 1-28.24 35.58Z" />
  </svg>
</button>

<script>
  // variables
  let darkMode = localStorage.getItem("darkMode");
  const darkModeToggle = document.querySelector(".darkmode-toggle");
  const darkLogo = document.querySelector("#dark-logo");
  const lightLogo = document.querySelector("#light-logo");

  // functions
  const enableDarkMode = (darkModeToggle: any) => {
    document.body.classList.add("darkmode");
    darkModeToggle.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256">
    <path fill="currentColor" d="M122 40V16a6 6 0 0 1 12 0v24a6 6 0 0 1-12 0m68 88a62 62 0 1 1-62-62a62.07 62.07 0 0 1 62 62m-12 0a50 50 0 1 0-50 50a50.06 50.06 0 0 0 50-50M59.76 68.24a6 6 0 1 0 8.48-8.48l-16-16a6 6 0 0 0-8.48 8.48Zm0 119.52l-16 16a6 6 0 1 0 8.48 8.48l16-16a6 6 0 1 0-8.48-8.48M192 70a6 6 0 0 0 4.24-1.76l16-16a6 6 0 0 0-8.48-8.48l-16 16A6 6 0 0 0 192 70m4.24 117.76a6 6 0 0 0-8.48 8.48l16 16a6 6 0 0 0 8.48-8.48ZM46 128a6 6 0 0 0-6-6H16a6 6 0 0 0 0 12h24a6 6 0 0 0 6-6m82 82a6 6 0 0 0-6 6v24a6 6 0 0 0 12 0v-24a6 6 0 0 0-6-6m112-88h-24a6 6 0 0 0 0 12h24a6 6 0 0 0 0-12" />
  </svg>`;
    darkModeToggle.setAttribute("aria-pressed", "true");
    darkModeToggle.setAttribute("aria-label", "Disable dark mode");
    localStorage.setItem("darkMode", "enabled");
  };

  const disableDarkMode = (darkModeToggle: any) => {
    document.body.classList.remove("darkmode");
    darkModeToggle.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256">
	<path fill="currentColor" d="M232.13 143.64a6 6 0 0 0-6-1.49a90.07 90.07 0 0 1-112.27-112.3a6 6 0 0 0-7.49-7.48a102.88 102.88 0 0 0-51.89 36.31a102 102 0 0 0 142.84 142.84a102.88 102.88 0 0 0 36.31-51.89a6 6 0 0 0-1.5-5.99m-42 48.29a90 90 0 0 1-126-126a90.9 90.9 0 0 1 35.52-28.27a102.06 102.06 0 0 0 118.69 118.69a90.9 90.9 0 0 1-28.24 35.58Z" />
</svg>`;
    darkModeToggle.setAttribute("aria-pressed", "false");
    darkModeToggle.setAttribute("aria-label", "Enable dark mode");
    localStorage.setItem("darkMode", "disabled");
  };

  document.addEventListener("astro:page-load", () => {
    // console.log("load");
    let darkMode = localStorage.getItem("darkMode");
    const darkModeToggle = document.querySelector(".darkmode-toggle");
    // execution
    if (darkMode === "enabled") enableDarkMode(darkModeToggle);

    // event listener
    darkModeToggle?.addEventListener("click", () => {
      darkMode = localStorage.getItem("darkMode");

      darkMode !== "enabled"
        ? enableDarkMode(darkModeToggle)
        : disableDarkMode(darkModeToggle);
    });
  });

  document.addEventListener("astro:after-swap", () => {
    // console.log("swap");
    let darkMode = localStorage.getItem("darkMode");
    const darkModeToggle = document.querySelector(".darkmode-toggle");
    if (darkMode === "enabled") enableDarkMode(darkModeToggle);
  });
</script>