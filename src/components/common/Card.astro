---
import type { ImageMetadata } from 'astro';
import { Icon } from "astro-icon/components";
import { getImage } from "astro:assets";
import { Image } from "astro:assets";
const {item, image, imageContain, icon, title, link, content, elevated, filled,outlined, addClasses} = Astro.props

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif,webp}')
if (!images[image]) throw new Error(`"${image}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);
const imagePath = image

---
<article class:list={["card justify-between group flex flex-col gap-2 shrink max-w-xs min-w-fit w-full grow pb-4 ", {"cursor-pointer hover:shadow-lg focus-within:shadow-lg": link}, elevated && "bg-[--surfaceContainerLow] shadow rounded", filled&&"bg-[--secondaryContainer] text-[--onSecondaryContainer] rounded-md", outlined && "border border-[--outlineVariant] rounded", addClasses]}>
  <h2 class="w-full capitalize pt-4 no-underline px-2 md:px-4">{title}</h2>
  <p class:list={[ link && "line-clamp-3"," px-4 md:px-6"]}>
      {content || item.teaser}
  </p>
  {link &&( 
      <a href={link} class="text-btn ml-1 pl-3 pr-2">
              <span class="">read more</span>
              <Icon name="mdi:arrow-right" class="text-lg flex-none font-normal" aria-hidden="true" />
      </a>
  )}
{images && 
  (
  <Image src={images[image]()} alt=""   width="1600"
  height="900"  class:list={["object-center bg-[--surfaceContainerLow] h-12 sm:h-32 lg:h-80 order-first sm:w-full", imageContain && "object-scale-down p-4" , !imageContain&& "object-cover"]} format="webp" />
  )
}

</article>
<script>
document.addEventListener("astro:page-load", () => {
  const cards = document.querySelectorAll(".card");
  Array.prototype.forEach.call(cards, (card) => {
    let down:any, up, link = card.querySelector("article a");
    card.onmousedown = () => (down = +new Date());
    card.onmouseup = () => {
      up = +new Date();
      if (up - down < 200) {
        link.click();
      }
    };
  });
});

</script>
